1. Guard rotation isn't discussed.
2. When a new consensus changes the guard/fast/stable/etc. status of a relay, does a client use the new flag to adjust its guards/fast circuits/etc. ? For example, when a chosen guard loses its guard flag, does the client choose a new guard?
3. Are guards selected first irrespective of any circuit (and thus are always initially not required to be Fast or Stable)?  When a guard is selected for a particular circuit, if some (or all) of the existing member of the guard list aren't usable for the circuit (e.g. one has been selected as an exit, a guard isn't marked 'Fast' and it's a fast circuit), are new guards added - possibly just for that circuit - if there are fewer than two usable ones?
4. Hibernation is not mentioned at all in path-spec.txt. It is mentioned in dir-spec.txt, but only off in the "Router descriptor format" section (2.1) to say that "if the value is 1, then the Tor relay was hibernating when the descriptor was published, and shouldn't be used to build circuits." This appears to conflict with later description in both dir-spec.txt (e.g. in Sec. 6.1) and path-spec.txt (e.g. in Sec. 2.2).
5. In path-spec.txt Sec. 6.1, it is stated that "for non-"fast" circuits, all nodes are eligible, and in Sec. 2.1.2 circuits built on demand (which are made for any request that no current circuit can support) are not specified to be Fast. However, in Sec. 6.1, it is stated that "Clients SHOULD NOT use non-'Fast' routers for any purpose other than very-low-bandwidth circuits (such as introduction circuits)". What does the Tor client do?
6. It is unclear (from Sec. 5.2 in dir-spec.txt) if clients prefer the descriptor listed in a consensus or in a more-recently published one.
7. It is stated in path-spec.txt (Sec. 2.2) that "by default, we are configured to allow non-valid routers in 'middle' and 'rendezvous' positions.". However, dir-spec.txt states in Sec. 6.1 that "Clients SHOULD NOT use non-'Valid' or non-'Running' routers unless requested to do so.". Which is it?